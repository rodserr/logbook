[
  {
    "path": "posts/2021-05-31-liverpool-20-21-epl-performance/",
    "title": "Liverpool 20-21 EPL Performance",
    "description": "Analysis of EPL 20/21 season of Liverpool FC using tidyverse",
    "author": [
      {
        "name": "Rodrigo Serrano",
        "url": "https://rodserr.github.io/logbook"
      }
    ],
    "date": "2021-05-31",
    "categories": [
      "Sports Analytics"
    ],
    "contents": "\n\nContents\nSeason Data\nMatch Data\nInjured Defense\nLossing Fabinho in the midfield\nGoals Shortfall\n\nSignning Performance\nHoodability\n\nOn the last match of the 20/21 season, Liverpool celebrated their Champions League qualification, almost as if they had won a title. In mid-January the team fell into a negative streak, to the point of breaking the record for the most consecutive games losing at Anfield. In this post we will try to quantify this turbulent season using tidyverse. All data is extracted from understat through understatr package\n\n\nhide\n\nlibrary(tidyverse)\nlibrary(understatr)\nlibrary(ggsoccer)\nlibrary(gt)\nlibrary(patchwork)\n\n\n\nSeason Data\nget_league_teams_stats function retrieve results at the season-team level. Let’s ask for the last three seasons and compare LFC rolling points. Note that understat labels the season with the first year of it, for example when we say 2020 season it would be 2020/2021\n\n\nhide\n\nepl <- list(2020, 2019, 2018) %>%\n  map_df(~get_league_teams_stats('EPL', year = .x))\n\n\n\nLet’s compare LFC runs in the last three seasons\n\n\nhide\n\n# Filter only LFC games\nmatch_season <- epl %>% filter(team_name == 'Liverpool')\n\n# Group by year and cumsum pts\nmatch_season %>% \n  arrange(date) %>%\n  group_by(year) %>% \n  transmute(\n    cm_pts = cumsum(pts),\n    Matches = 1:n(),\n    .label = if_else(cm_pts == last(cm_pts), as.character(year), NA_character_)\n  ) %>% \n  ggplot(\n    aes(x = Matches, y = cm_pts, color = as_factor(year), alpha = (year != 2020))\n  ) +\n  geom_line() +\n  ggrepel::geom_label_repel(aes(label = .label), nudge_x = 1, na.rm = TRUE) +\n  scale_alpha_manual(values = c(1, .3), guide = FALSE) +\n  theme(legend.position = 'none') +\n  labs(y = 'Points', title = 'Cumulative Points')\n\n\n\n\nThe gap increases after the 14th match, but it begins to recover around the 30th. 2018 and 2019 were amazing seasons, it would be hard to have that slope again\nunderstat provides expected goals xG, a very popular metric in soccer analytics. According to their page\n\n…more and more sports analytics turn to the advanced models like xG, which is a statistical measure of the quality of chances created and conceded… we trained neural network prediction algorithms with the large dataset (>100,000 shots, over 10 parameters for each)\n\nLet’s see how many matches LFC couldn’t win having greater xG than his rival\n\n\nhide\n\nmatch_season %>% \n  filter((xG > xGA) & result != 'w') %>% \n  group_by(year) %>% \n  summarise(\n    `Nº Matches` = n(),\n    `Points` = 3*n()-sum(pts)\n  ) %>% \n  gt() %>% \n  tab_header(title = 'Missed Wins')\n\n\n\nhtml {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n}\n\n#klmzqhzkml .gt_table {\n  display: table;\n  border-collapse: collapse;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#klmzqhzkml .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#klmzqhzkml .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#klmzqhzkml .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 0;\n  padding-bottom: 4px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#klmzqhzkml .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#klmzqhzkml .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#klmzqhzkml .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#klmzqhzkml .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#klmzqhzkml .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#klmzqhzkml .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#klmzqhzkml .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#klmzqhzkml .gt_group_heading {\n  padding: 8px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#klmzqhzkml .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#klmzqhzkml .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#klmzqhzkml .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#klmzqhzkml .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#klmzqhzkml .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 12px;\n}\n\n#klmzqhzkml .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#klmzqhzkml .gt_first_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n}\n\n#klmzqhzkml .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#klmzqhzkml .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#klmzqhzkml .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#klmzqhzkml .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#klmzqhzkml .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#klmzqhzkml .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding: 4px;\n}\n\n#klmzqhzkml .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#klmzqhzkml .gt_sourcenote {\n  font-size: 90%;\n  padding: 4px;\n}\n\n#klmzqhzkml .gt_left {\n  text-align: left;\n}\n\n#klmzqhzkml .gt_center {\n  text-align: center;\n}\n\n#klmzqhzkml .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#klmzqhzkml .gt_font_normal {\n  font-weight: normal;\n}\n\n#klmzqhzkml .gt_font_bold {\n  font-weight: bold;\n}\n\n#klmzqhzkml .gt_font_italic {\n  font-style: italic;\n}\n\n#klmzqhzkml .gt_super {\n  font-size: 65%;\n}\n\n#klmzqhzkml .gt_footnote_marks {\n  font-style: italic;\n  font-weight: normal;\n  font-size: 65%;\n}\nMissed Wins\n    year\n      Nº Matches\n      Points\n    2018\n3\n72019\n4\n92020\n8\n18\n\nThe number of matches doubles the previous two season, losing 18 points in games where LFC supposed to have an advantage\nMatch Data\nWe can ask for stats of every LFC player at season level\n\n\nhide\n\n# Get players stats\nplayer_season <- list(2020, 2019, 2018) %>% \n  map_df(~get_team_players_stats('Liverpool', year = .x))\n\n\n\nunderstatr also provides shots and stats for single matches, but we need to know each match_id, which appears only on player-match level data. Let’s find all match_ids for LFC 2020 season by looking at games where Fabinho, Jota and Thiago played. Later in the post we will analyze these players individually\n\n\nhide\n\n# Get games from players\nplayer_match <- list(6854, 229, 3420) %>% \n  map_df(~get_player_matches_stats(.x))\n\n# Distinct matches ids from 2020 season\nmatch_ids <- player_match %>%\n  filter(year == 2020) %>%\n  distinct(match_id) %>%\n  pull()\n\n# Get shots from every game\nmatch_shots <- map_df(match_ids, ~get_match_shots(.x))\n\n# Get stats from every game\nmatch_stats <- map_df(match_ids, ~get_match_stats(.x))\n\n\n\nInjured Defense\nLFC’s main problems this season were due to the injuries of their 3 main Central defenses early on the season. Let’s check DC performances with match stats data and join it with shots/goals conceded\n\n\nhide\n\n# Shots conceded by LFC \nshots_against <- match_shots %>% \n  filter((h_team != 'Liverpool' & h_a == 'h') | (a_team != 'Liverpool' & h_a == 'a')) %>% \n  filter(result != 'OwnGoal') %>% \n  group_by(match_id) %>% \n  summarise(\n    shots = n(),\n    goals_against = sum(result == 'Goal')\n  )\n\n# DC pairs from every 2020 game\ncentral_def <- match_stats %>% \n  filter(team_id == 87, position == 'DC')\n\n# Paste players names & Join with shots conceded\ncentral_def_pairs <- central_def %>% \n  group_by(match_id) %>% \n  arrange(player) %>% # So player order do not affect \n  dplyr::summarise(pair = paste0(player, collapse = ' - ')) %>% \n  left_join(shots_against, by = 'match_id')\n\n# Distinct pairs\nn_pairs <- unique(central_def_pairs$pair) %>% length()\n\n# Individual DC with most appears\ndc_more_appears <- central_def %>% count(player) %>% slice_max(order_by = n)\n\n# Build gtable\ncentral_def_pairs %>% \n  group_by(pair) %>% \n  summarise(\n    appearances = n(), \n    shots = sum(shots), \n    goals = sum(goals_against),\n    shots_per_game = round(shots/appearances, 1),\n    goals_per_game = round(goals/appearances, 1)\n  ) %>% \n  filter(appearances > 1) %>% \n  arrange(desc(appearances)) %>%\n  gt(rowname_col = 'pair') %>% \n  tab_header(\n    title = 'Goals/Shots Conceded by Pair DC', \n    subtitle = glue::glue('Pairs with >1 appearence of {n_pairs} pairs used in the season')\n  ) %>% \n  tab_footnote(\n    locations = cells_column_labels(vars(appearances)),\n    footnote = glue::glue('{dc_more_appears$player} had the highest number of appearances with {dc_more_appears$n}')\n  ) %>% \n  cols_align('center')\n\n\n\nhtml {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n}\n\n#cuzjzajqpf .gt_table {\n  display: table;\n  border-collapse: collapse;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#cuzjzajqpf .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#cuzjzajqpf .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#cuzjzajqpf .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 0;\n  padding-bottom: 4px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#cuzjzajqpf .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#cuzjzajqpf .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#cuzjzajqpf .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#cuzjzajqpf .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#cuzjzajqpf .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#cuzjzajqpf .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#cuzjzajqpf .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#cuzjzajqpf .gt_group_heading {\n  padding: 8px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#cuzjzajqpf .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#cuzjzajqpf .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#cuzjzajqpf .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#cuzjzajqpf .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#cuzjzajqpf .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 12px;\n}\n\n#cuzjzajqpf .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#cuzjzajqpf .gt_first_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n}\n\n#cuzjzajqpf .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#cuzjzajqpf .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#cuzjzajqpf .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#cuzjzajqpf .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#cuzjzajqpf .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#cuzjzajqpf .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding: 4px;\n}\n\n#cuzjzajqpf .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#cuzjzajqpf .gt_sourcenote {\n  font-size: 90%;\n  padding: 4px;\n}\n\n#cuzjzajqpf .gt_left {\n  text-align: left;\n}\n\n#cuzjzajqpf .gt_center {\n  text-align: center;\n}\n\n#cuzjzajqpf .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#cuzjzajqpf .gt_font_normal {\n  font-weight: normal;\n}\n\n#cuzjzajqpf .gt_font_bold {\n  font-weight: bold;\n}\n\n#cuzjzajqpf .gt_font_italic {\n  font-style: italic;\n}\n\n#cuzjzajqpf .gt_super {\n  font-size: 65%;\n}\n\n#cuzjzajqpf .gt_footnote_marks {\n  font-style: italic;\n  font-weight: normal;\n  font-size: 65%;\n}\nGoals/Shots Conceded by Pair DC\n    Pairs with >1 appearence of 16 pairs used in the season\n    \n      appearances1\n      shots\n      goals\n      shots_per_game\n      goals_per_game\n    Fabinho - Joel Matip\n6\n46\n3\n7.7\n0.5Nathaniel Phillips - Rhys Williams\n6\n65\n4\n10.8\n0.7Nathaniel Phillips - Ozan Kabak\n4\n30\n1\n7.5\n0.2Fabinho - Jordan Henderson\n3\n23\n5\n7.7\n1.7Fabinho - Ozan Kabak\n3\n30\n3\n10.0\n1.0Joseph Gomez - Virgil van Dijk\n3\n28\n11\n9.3\n3.7Fabinho - Nathaniel Phillips\n2\n19\n1\n9.5\n0.5Jordan Henderson - Nathaniel Phillips\n2\n21\n2\n10.5\n1.0Jordan Henderson - Ozan Kabak\n2\n20\n5\n10.0\n2.5\n        \n          1\n          \n           \n          Fabinho had the highest number of appearances with 17\n          \n      \n    \n\nWow!! 16 different pairs of DC across the season. Starting pair Virgil-Gomez had only 3 appearances and have the most goals per game conceded due to the unfortunate loss against Aston Villa (7-2). Even Henderson had to play DC which is clearly not his position. Looks like Phillips and Kabak did a pretty good job having the minimum shots and goals conceded, though Kabak also suffered an injury at the end of the season. Fabinho had the most appearances despite not being DC which takes us to the next key point.\nLossing Fabinho in the midfield\nI think Fabinho is one of the keys to the success of the last season, and losing him in the midfield weakened the LFC game.\n\n\nhide\n\nfabinho <- player_match %>% \n  filter(player_name == 'Fabinho')\n\n# Fabinho influence\nfab_perc_pts <- fabinho %>% \n  filter(year == 2020) %>% \n  mutate(\n    # Compute pts earned by liverpool\n    pts = case_when(\n      h_team == 'Liverpool' & h_goals > a_goals ~ 3, \n      a_team == 'Liverpool' & h_goals < a_goals ~ 3, \n                              h_goals == a_goals ~ 1,\n                                              T ~ 0\n    )\n  ) %>% \n  filter(position != 'Sub') %>% \n  group_by(position) %>% \n  summarise(\n    pts = sum(pts)/(n()*3),\n    games = n()\n  ) %>% \n  ggplot(aes(x = position, y = pts, fill = position, label = glue::glue('{games} games played'))) +\n  geom_col() +\n  geom_text(nudge_y = .05, size = 2.5) +\n  scale_y_continuous(labels = scales::percent) +\n  theme(legend.position = 'none') +\n  labs(x = '', y = '% of pts Earned', title = '% Points earned')\n\n# LFC Cumulative pts color by Fabinho position \nfab_cml_pts <- match_season %>% \n  filter(year == 2020) %>% \n  left_join(fabinho %>% filter(year == 2020), by = 'date') %>% \n  arrange(date) %>% \n  mutate(\n    cm_pts = cumsum(pts),\n    Matches = 1:n(),\n    position = replace_na(position, 'Injured')\n  ) %>% \n  ggplot(aes(x = Matches, y = cm_pts, color = position)) +\n  geom_point() +\n  theme(\n    legend.position = 'top',\n    legend.justification = 'left',\n    legend.title = element_blank()\n  ) +\n  labs(y = 'Points', title = 'LFC Cumulative Points', subtitle = 'Colored by Fabinho position')\n\n# Patchwork join\nfab_perc_pts + fab_cml_pts + \n  plot_layout(widths = c(1, 3)) +\n  plot_annotation(title = 'Fabinho Influence by Position')\n\n\n\n\nWhen Fabinho plays DC LFC won only 49% of possible points, while as MC the number rises to 85%. You can see how the flattest runs happen at mid-season when he played as DC and even when he was injured (yes, he was injured too). And look at the comeback at the end of the season, he played as MC in all those victories… Yes, Klopp! show some love to that man!\n\nGoals Shortfall\nInjuries weren’t the only problem, goals shortfall also affected the performance\n\n\nhide\n\n# Attackers\nmain_FW <- player_season %>% \n  filter(player_id %in% c(1250, 838, 482))\n\n# Attackers performances\nmain_FW %>% \n  transmute(\n    player_name, year,\n    Scored = ((npg+assists)/time)*90,\n    Expected = ((npxG+xA)/time)*90\n  ) %>%\n  pivot_longer(c(Scored, Expected)) %>% \n  ggplot(aes(x = year, y = value, color = name)) +\n  geom_line() +\n  geom_point() +\n  scale_x_continuous(breaks = c(2018, 2019, 2020)) +\n  facet_wrap(~player_name) +\n  theme(\n    legend.position = 'top',\n    legend.justification = 'left',\n    legend.title = element_blank()\n  ) +\n  labs(title = 'No penalty Goals + Assists per 90 minutes', y = 'G + A per 90m', x = '')\n\n\n\n\nAll three FW decrease their G+A per game in respect of their previous seasons, Especially Salah and Mane. Let’s compare the top 5 contributors across seasons\n\n\nhide\n\n# Main contributors by season\nplayer_season %>% \n  mutate(\n    GA_90m = ((npg+assists)/time)*90,\n    n = tidytext::reorder_within(player_name, GA_90m, year)\n  ) %>% \n  group_by(year) %>% \n  slice_max(order_by = GA_90m, n = 5) %>% \n  ggplot(aes(x = GA_90m, y = n)) +\n  geom_col() +\n  facet_wrap(~year, scales = 'free_y') +\n  tidytext::scale_y_reordered() +\n  labs(title = 'Top Contributors: G + A per 90 minutes', x = 'G + A per 90m', y = '')\n\n\n\n\nJota and Chamberlain played a big role in helping to fill the goal gap this season, though they both suffered major injuries that made them miss a lot of games\nLet’s play around with the shots data to compare the top 5 shooters\n\n\nhide\n\n# All LFC shots\nlfc_shots <- match_shots %>% \n  filter((h_team == 'Liverpool' & h_a == 'h') | (a_team == 'Liverpool' & h_a == 'a'))\n\n# Top 5 shooters\n.shooters <- lfc_shots %>% \n  count(player_id) %>% \n  slice_max(order_by = n, n = 5) %>% \n  pull(player_id)\n\n# Build df for automagic_tabs2\nshooters_dataset <- lfc_shots %>% \n  filter(player_id %in% .shooters) %>% \n  group_by(player) %>% \n  nest() %>% \n  mutate(\n    shotplot = map(\n      data,\n      function(df){\n        shots <- df %>%\n          mutate(.x = X*100, .y = 100-Y*100)\n        \n        pitch_text <- shots %>%\n          summarise(\n            .x = 65,\n            `Shots per Goal` = n()/sum(result == 'Goal'),\n            `Average xG` = mean(xG)\n          ) %>% \n          pivot_longer(-.x) %>% \n          mutate(\n            .y = c(25, 75),\n            value = round(value, 2)\n          )\n        \n        shots %>% \n          filter(shotType != 'OtherBodyPart') %>% #To mantain consistency over color groups\n          ggplot(aes(x = .x, y = .y)) +\n          annotate_pitch() +\n          theme_pitch() +\n          geom_point(aes(size = xG, color = shotType, alpha = result == 'Goal')) +\n          geom_text(data = pitch_text, aes(label = glue::glue('{name}: {value}')), size = 3.5) +\n          scale_size_continuous(limits = c(0, 1), breaks = c(.3, .6, .9)) +\n          scale_alpha_manual(values = c(.3, 1), guide = FALSE) +\n          coord_flip(xlim = c(60, 100), ylim = c(0, 100))\n      }\n    ),\n    n_shots = map_dbl(data, ~nrow(.x))\n  ) %>% \n  arrange(desc(n_shots)) %>% \n  ungroup()\n\n\n\nInspired by (Nakagawara (2020)) For this, let’s use ggsoccer to set the soccer pitch as the background of the plot and automagic_tabs2 function from sknifedatar (Zambrano (2021)), that automates the process of building tabs. Note that because this article is made with distill, we need to call xaringanExtra::use_panelset before calling automagic_tabs2\n\n\nhide\n\nxaringanExtra::use_panelset()\n\n\n\n\n\nMohamed Salah\n\n\n\nSadio Mané\n\n\n\nRoberto Firmino\n\n\n\nTrent Alexander-Arnold\n\n\n\nDiogo Jota\n\n\n\n\n\nSalah is the one that makes more shots and needed less to score, he also has better xG from shots coming from the right side and he barely tries his right foot. Firmino and Mane are more balanced, trying shots with their weak foot and head, but they need more shots to score. It seems like Jota is the one that better chooses his shots. Trent has it more difficult because he shots from away having lower xG.\nSignning Performance\nLet’s check the performance of summer signings Jota and Thiago\n\n\nhide\n\nplayer_match %>%\n  filter(player_id %in% c(6854, 229), year %in% c(2020, 2019, 2018)) %>%\n  mutate(\n    GA = npg+assists,\n    xGA = npxG+xA\n  ) %>% \n  group_by(player_name, year) %>% \n  summarise(\n    `Possible Time Played (%)` = sum(time)/(n()*90),\n    `G+A per 90m` = (sum(GA)/sum(time))*90,\n    `Key Passes per 90m` = (sum(key_passes)/sum(time))*90\n  ) %>% \n  pivot_longer(-c(player_name, year)) %>% \n  ggplot(aes(x = year, y = value, color = player_name)) +\n  geom_line() +\n  geom_point() +\n  facet_grid(player_name~name, scales = 'free') +\n  theme(legend.position = 'none') +\n  scale_x_continuous(breaks = c(2018, 2019, 2020)) +\n  labs(x = '', y = '', title = 'Summer Signning Performance')\n\n\n\n\nYou can see Diogo adapted very quickly, increasing G+A ratio of the last season, contrary to what happened with Thiago, that got better performance at the end of the season, being a key player in the midfield\nHoodability\nIn this post (Gallagher (2017)) were introduces the term of gaining points against the big six and loss against the bottom table. Let’s check hoodability for this season\n\n\nhide\n\n# Build Table\nposition_table <- epl %>% \n  filter(year == 2020) %>% \n  group_by(team_name) %>% \n  summarise(pts = sum(pts)) %>% \n  arrange(desc(pts)) %>% \n  transmute(team_name, position = 1:n())\n\n# pts earned by LFC\nmatch_shots %>% \n  distinct(h_team, a_team, h_goals, a_goals) %>% \n  transmute(\n    team_name = if_else(h_team == 'Liverpool', a_team, h_team),\n    pts =  case_when(\n      h_team == 'Liverpool' & h_goals > a_goals ~ 3, \n      a_team == 'Liverpool' & h_goals < a_goals ~ 3, \n      h_goals == a_goals ~ 1,\n      T ~ 0\n    )) %>% \n  left_join(position_table, by = 'team_name') %>% \n  mutate(\n    position_group = case_when(\n      position <= 6 ~ 'Top 6',\n      position >= 14 ~ 'Bottom 6',\n      T ~ 'Middle table'\n    )\n  ) %>% \n  group_by(position_group) %>% \n  summarise(\n    pts = sum(pts),\n    ppts = pts/(3*n())\n  ) %>% \n  ggplot(aes(x = position_group, y = ppts, label = glue::glue('Total pts earned: {pts}'))) +\n  geom_col() +\n  geom_text(nudge_y = .05) +\n  scale_y_continuous(labels = scales::percent) +\n  labs(y = 'Possible Points', x = 'Table Position', title = 'Possible Points Earned by Liverpool against')\n\n\n\n\nPretty much the same possible points were earned at the bottom and top of the table, but you would expect to have a better performance against the bottom 6 teams\nSooooo, the 20-21 season was a tough one for LFC and we knew it the moment Virgil surgery was confirmed, but it got worse with Gomez and Matip injuries because basically, we run out of DC. Despite this, the team managed to qualify for Champions League with an amazing comeback and a memorable moment in Allison’s 95’ header against West Brom. Hopefully next season’s analysis I will include more Klopp gifs running towards “the Kop”… In the meantime\n\n\n\n\nGallagher, Joe. 2017. “Defining ’Robin Hood Teams’ and Measuring ’Hoodability’ (Pt i).” 2017. https://jogall.github.io/2017-08-04-robin-hood-teams/.\n\n\nNakagawara, Ryo. 2020. “My r Table Competition 2020 Submission: xG Timeline Table for Soccer/Football with gt!” 2020. https://ryo-n7.github.io/2020-11-02-xG-timeline-table-competition-tutorial/.\n\n\nZambrano, Rafael. 2021. 2021. https://rafzamb.github.io/sknifedatar/articles/automatic_tabs.html.\n\n\n\n\n",
    "preview": "posts/2021-05-31-liverpool-20-21-epl-performance/liverpool-logo.png",
    "last_modified": "2021-05-31T17:00:48+00:00",
    "input_file": {},
    "preview_width": 250,
    "preview_height": 250
  }
]
