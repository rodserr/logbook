{
  "hash": "6e07337c39cb51c8b17b749d2e730784",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"MNE\"\ndescription: |\n  MNE\ndate: 2024-08-28\ndraft: true\ncategories: [ETL, DataWarehouse]\n---\n\n\nhttps://www.oecd.org/en/data/dashboards/oecd-unsd-multinational-enterprise-information-platform.html\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n\n```\nhere() starts at C:/Users/rodri/OneDrive/Documents/logbook\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(readxl)\nlibrary(readr)\nlibrary(janitor)\nlibrary(here)\nlibrary(ggplot2)\nlibrary(sf)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nreadxl::excel_sheets(here(.post_path, 'Global-Register_2022.xlsx'))\n\nglobal_register <- read_xlsx(\n  here(.post_path, 'Global-Register_2022.xlsx'),\n  sheet = 'Group Register'\n) %>% \n  janitor::clean_names()\n\ncountry_code <- read_xlsx(\n  here(.post_path, 'Global-Register_2022.xlsx'),\n  sheet = 'Country_Code_mapping'\n) %>% \n  janitor::clean_names()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncontinent_iso3 <- country_code %>% \n  select(\n    iso3 = iso_alpha3_code,\n    region_name\n  )\n\n# Iso3 codes of American countries\namerica_code <- country_code %>% \n  filter(\n    region_name == 'Americas',\n    !un_country_or_area1 %in% c('Canada', 'United States of America', 'United States Virgin Islands')\n  )\n\n# Iso3 of MNE parents\nparents_mne_country <- global_register %>% \n  filter(heirarchy == 'MNE Head') %>% \n  distinct(parent_mne, parent_iso3 = iso3)\n\n# Subsidiaries by country and parent country\namerica_subs <- global_register %>% \n  filter(\n    heirarchy != 'MNE Head',\n    iso3 %in% america_code$iso_alpha3_code\n  ) %>% \n  distinct(parent_mne, iso3) %>% \n  inner_join(\n    parents_mne_country, \n    by = 'parent_mne',\n    relationship = \"many-to-many\"\n  ) %>% \n  count(parent_iso3, iso3, name = 'n_subsidiary')\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncountry_coord <- readr::read_csv(\n  'https://gist.githubusercontent.com/tadast/8827699/raw/61b2107766d6fd51e2bd02d9f78f6be081340efc/countries_codes_and_coordinates.csv',\n  show_col_types = FALSE\n)\n\ncountry_coord_clean <- country_coord %>% \n  distinct(\n    iso3 = `Alpha-3 code`, \n    lat = `Latitude (average)`, \n    lng = `Longitude (average)`\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsegments <- america_subs %>%\n    # Join subsidiary-country coordenates\n  left_join(\n    country_coord_clean,\n    by = c('iso3')\n  ) %>% \n    # Join parent-country coordenates\n  left_join(\n    country_coord_clean,\n    by = c('parent_iso3' = 'iso3'),\n    suffix = c(\"\", \"_parent\")\n  ) %>% \n    # Join parent-country Continents\n  left_join(\n    continent_iso3,\n    by = c('parent_iso3' = 'iso3')\n  ) %>% \n    # Average coordinates of continents\n  mutate(\n    .by = region_name,\n    lat_parent = mean(lat_parent),\n    lng_parent = mean(lng_parent)\n  ) %>% \n    # Group subsidiaries by Parent Continent and iso3\n  summarise(\n    .by = c(region_name, iso3, lat, lng, lat_parent, lng_parent),\n    n_subsidiary = sum(n_subsidiary)\n  ) %>% \n  mutate(\n    # Center America countries (targets)\n    lng = lng + 50,\n    # Center eastern continets\n    lng_parent = if_else(region_name %in% c('Asia', 'Oceania'), lng_parent-80, lng_parent)\n  ) %>% \n    # Keep main American countries by n_subsidiary\n  filter(\n    .by = iso3,\n    sum(n_subsidiary) > 50\n  )\n\nsegments %>% filter(iso3 == 'VEN')\n\nsubs <- segments %>% \n  summarise(\n    .by = c(iso3, lat, lng),\n    n_subsidiary = sum(n_subsidiary)\n  )\n\nparents <- segments %>% \n  summarise(\n    .by = c(region_name, lat_parent, lng_parent),\n    n_subsidiary = sum(n_subsidiary)\n  )\n\ncircle <- st_point(x = c(0, 0)) %>%\n  st_buffer(dist = 6371000) %>%\n  st_sfc(crs = ortho) %>%\n  st_transform(crs = 4326)\n\nworld_ortho <- st_cast(world, 'MULTIPOLYGON') %>%\n  st_cast('POLYGON', do_split = TRUE) %>%\n  st_transform(crs = ortho)\n\nspData::w\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n.region_colors <- c('Americas'=\"#DB3A2F\", 'Europe'=\"#275D8E\", 'Asia'=\"#DC942F\", 'Africa'=\"#698E7C\", 'Oceania'=\"#902A57\")\nggplot() +\n  geom_curve(\n    data = segments,\n    curvature = .3,\n    angle = 90,\n    ncp = 35,\n    alpha = .7,\n    aes(\n      x = lng_parent, y = lat_parent, \n      xend = lng, yend = lat,\n      linewidth = n_subsidiary,\n      color = region_name,\n      group = iso3\n    )\n  ) +\n    # Continets\n  geom_point(\n    data = parents,\n    aes(x = lng_parent, y = lat_parent, size = n_subsidiary, color = region_name), \n    alpha = 1\n  ) +\n  geom_text(\n    data = parents,\n    aes(x = lng_parent, y = lat_parent, label = region_name),\n    color = 'black'\n  ) +\n    # American-Subsidiaries\n  geom_point(\n    data = subs,\n    aes(x = lng, y = lat, size = n_subsidiary), \n    alpha = 1,\n    color = 'gray40'\n  ) +\n  geom_text(\n    data = subs,\n    aes(x = lng, y = lat, label = iso3),\n    color = 'white'\n  ) +\n  theme_void() +\n  scale_size(range = c(5, 30)) +\n  # scale_alpha(range = c(.5, 2)) +\n  scale_color_manual(values = .region_colors) +\n  scale_linewidth(range = c(1, 6)) +\n  guides(alpha = 'none', size = 'none', linewidth = 'none', color = 'none') +\n  annotate(\"text\", x = 1.05, y = -45, label = \"Source: | Graphic: Georgios Karamanis\", hjust = 0, family = \"IBM Plex Sans\", size = 4) +\n  theme(\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrenv::snapshot(lockfile = here::here(.post_path, \"renv.lock\"))\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}